.btn {
  &,
  /* Pseudo class :link, style elements under special conditions */
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    font-size: $default-font-size;
    padding: 1.5rem 4rem;
    /* Rounded corner */
    border-radius: 10rem;
    /* Always use `display: inline-block` or `display: block`
    if you want to add some padding or width to an element */ 
    /* inline-block is treated as text */
    display: inline-block;

    /* transition HAS to be in the initial state! */
    transition: all .2s;

    position: relative;

    // Change for <button> element
    border: none;
    cursor: pointer;
  }

  &:hover {
    transform: translateY(-.3rem);
    /* box-shadow: x y blur color */
    box-shadow: 0 1rem 2rem rgba($color-black, .2);

    &::after {
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  /* Relative to the INITIAL LINK state */
  &:active,
  &:focus {
    outline: none;
    transform: translateY(-.1rem);
    /* box-shadow: x y blur color */
    box-shadow: 0 .5rem 1rem rgba($color-black, .2);
  }

  &--white {
    background-color: $color-white;
    color: $color-gray-dark;

    &::after {
      background-color: $color-white;
    }
  }

  &--green {
    background-color: $color-primary;
    color: $color-white;
    
    &::after {
      background-color: $color-primary;
    }
  }

  /* `after` adds a pseudo-element adds a virtual element right after the element we're selecting */
  &::after {
    /* we HAVE to specify `content` and `display`, otherwise the element will NOT appear */
    content: "";
    display: inline-block;

    height: 100%;
    width: 100%;
    border-radius: 10rem;

    /* Put the after element behind the button. `absolute` positioning requires `relative` for its parent */
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;

    transition: all .2s;
  }

  &--animated {
    animation: moveInBottom .2s ease-out;
    animation-delay: .75s;
    /* 0% will bet set BEFORE the animation starts */
    animation-fill-mode: backwards;
  }
}


.btn-text {
  &:link,
  &:visited {
    font-size: $default-font-size;
    color: $color-primary;
    display: inline-block;
    text-decoration: none;
    border-bottom: .1rem solid $color-primary;
    padding: .3rem;
    transition: all .2s;
  }

  &:hover {
    background-color: $color-primary;
    color: $color-white;
    /* offset-x | offset-y | blur-radius | color */
    box-shadow: 0 1rem 2rem rgba($color-black, .15);
    transform: translateY(-.2rem);
  }

  &:active {
    /* offset-x | offset-y | blur-radius | color */
    box-shadow: 0 .5rem 1rem rgba($color-black, .15);
    transform: translateY(0rem);
  }
}
